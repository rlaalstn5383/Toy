#!python3
import argparse
import sys
import time
from datetime import datetime
from getpass import getpass
from random import randint
from typing import List

from SRT import SRT, SRTError
from SRT.train import SRTTrain

parser = argparse.ArgumentParser()
parser.add_argument('--id', type=lambda s: str(int(s)), required=True)
parser.add_argument('--password', type=str)
parser.add_argument('--dpt', type=str, required=True)
parser.add_argument('--arv', type=str, required=True)
parser.add_argument('--date', type=lambda d: datetime.strptime(d, '%Y%m%d').strftime('%Y%m%d'))
parser.add_argument('--from_hour', type=lambda h: datetime.strptime(h, '%H').strftime('%H0000'))
parser.add_argument('--to_hour', type=lambda h: datetime.strptime(h, '%H').strftime('%H0000'))

args = parser.parse_args()

id = args.id
password = args.password if args.password else getpass('password: ')
dpt = args.dpt
arv = args.arv
date = args.date
from_hour = args.from_hour
to_hour = args.to_hour

srt = SRT(id, password)
while True:
    print('검색: %s %s %s %s' % (dpt, arv, date, from_hour))
    trains: List[SRTTrain] = []

    for _ in range(10):
        try:
            trains = srt.search_train(dpt, arv, date, from_hour, False)
            break
        except SRTError as e:
            if '사용자가 많아 접속이 원활하지 않습니다' in e.msg:
                continue
            raise
    else:
        raise Exception

    trains = [train for train in trains if train.dep_time <= to_hour]

    print('\t' + '\n\t'.join(map(str, trains)))
    for train in trains:
        if not train.general_seat_available():
            continue
        try:
            srt.reserve(train)
            print('예약완료: %s' % train)
        except Exception as e:
            print('예약실패: %s' % e)
    sys.stdout.flush()
    time.sleep(randint(5, 15))
